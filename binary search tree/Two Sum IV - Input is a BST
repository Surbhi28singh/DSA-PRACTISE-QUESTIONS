void inorderTraversal(BinaryTreeNode<int>* root,vector<int> &inorder){
    if(root==NULL)
    return ;
    inorderTraversal(root->left,inorder);
    inorder.push_back(root->data);
    inorderTraversal(root->right,inorder);
}

bool twoSumInBST(BinaryTreeNode<int>* root, int target) {
    vector<int>in;
    inorderTraversal(root,in);
	int i=0;
    int j=in.size()-1;
    while(i<j){
    int sum=in[i]+in[j];
  if(sum==target){
      return true;
  }
  else if(sum>target){
      j--;
  }
  else{
      i++;
  }
    }
  return false;
    
}
