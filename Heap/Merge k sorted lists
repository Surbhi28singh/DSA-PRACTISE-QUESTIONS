class compare{
    public:
    bool operator()(     ListNode*a,     ListNode*b){
        return a->val>b->val;
    }
};
class Solution {
    
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int k=lists.size();

    priority_queue < ListNode*,vector< ListNode*>,compare>pq;
    for(int i=0;i<k;i++){
        if(lists[i]!=NULL){
        pq.push(lists[i]);
        }
    }
       ListNode*head=NULL;
       ListNode*tail=NULL;
    while(pq.size()>0){
            ListNode*top=pq.top();
         pq.pop();
    if(top->next!=NULL){
        pq.push(top->next);
    }
    if(head==NULL){
        head=tail=top;
    
        
    }
    else{
        tail->next=top;
        tail=top;
      
    }
   
}
 return head;
    }
};
