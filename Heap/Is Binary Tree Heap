class Solution {
  public:
  int countNodes(struct Node* tree){
      if(tree==NULL)
      return 0;
      return 1+countNodes(tree->left)+countNodes(tree->right);
  }
  bool isMax(struct Node* tree){
      if(tree->left==NULL && tree->right==NULL){
          return true;
      }
      if(tree->right==NULL){
          return (tree->data>tree->left->data);
      }
      else if(tree->right!=NULL && tree->left!=NULL){
          return (tree->data>tree->right->data && tree->data> tree->left->data);
      }
      else{
          return false;
      }
  }
  bool isCBT(struct Node* tree,int index,int cnt){
      if(tree==NULL){
          return true;
      }
      if(index>=cnt){
          return false;
      }
     else{
         bool left= isCBT(tree->left,2*index+1,cnt);
         bool right= isCBT(tree->right,2*index+2,cnt);
         return(left&&right);
     }
  }
    bool isHeap(struct Node* tree) {
      int index=0;;
      int cnt=countNodes(tree);
      if(isCBT( tree,index,cnt)&& isMax(tree)){
          return true;
      }
      else{
          return false;
      }
    }
};
