#include<limits.h>
#include<queue>
class node{
    public:
int data;
int row;
int col;
node(int data,int i,int j){
    this->data=data;
    row=i;
    col=j;
}
};
class compare{
public:
bool operator()(node*a,node*b){
return a->data>b->data;
}
};
int kSorted(vector<vector<int>> &a, int k, int n) {
    int mini=INT_MAX;
    int maxi=INT_MIN;
   priority_queue<node*,vector<node*>,compare>pq;
    for(int i=0;i<k;i++){
        int element=a[i][0];
        maxi=max(maxi,element);
        mini=min(mini,element);
        node* tmp=new node(element,i,0);
        pq.push (tmp);
    }
   int start=mini;
   int end=maxi;

    while(pq.size()>0){
        node*temp=pq.top();
         pq.pop();
         mini=temp->data;
         if(maxi-mini<end-start){
             start=mini;
             end=maxi;
         }
         if(temp->col+1<n){
             maxi=max(maxi,a[temp->row][temp->col+1]);
             pq.push(new node(a[temp->row][temp->col+1],temp->row,temp->col+1));
         }
         else{
             break;
         }

}
return end-start+1;
}
