class Solution {
  public:
    // Function to check if two strings are rotations of each other or not.
    vector<int>lps(string & pattern){
        int m =pattern.length();
        vector<int>lps(m,0);
        int i=0;
        int j =i+1;
        while(j<m){
            if(pattern[i]==pattern[j]){
                i++;
                lps[j]=i;
                j++;
                
            }
            else{
                if(i!=0){
                    i=lps[i-1];
                }
                else{
                    lps[j]=0;
                    j++;
                }
            }
        }
        return lps;
        
    }
    bool kmp(string &s1, string &s2){
        int n =s1.size();
        int m =s2.size();
        vector<int>lps1=lps(s2);
        int i=0;int j=0;
        while(i<n){
            if(s1[i]==s2[j]){
                i++;
                j++;
            }
            if(j==m){
                return true;
            }
            else if(i<n && s1[i]!=s2[j]){
                if(j!=0){
                    j=lps1[j-1];
                }
                else{
                    i++;
                }
            }
        }
            return false;
        
    }
    bool areRotations(string &s1, string &s2) {
       string temp=s1+s1;
       return kmp(temp,s2);
    }
};
