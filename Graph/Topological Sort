#include <bits/stdc++.h> 
void topSort(unordered_map<int,list<int>>&adj,vector<bool>&visited,int node,stack<int>&s){
   visited[node]=true;
   for(auto i:adj[node]){
       if(!visited[i])
       topSort(adj,visited,i,s);
   }
   s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
unordered_map<int,list<int>>adj;
for(int i=0;i<e;i++){
    int u=edges[i][0];
    int w=edges[i][1];
    adj[u].push_back(w);
}
vector<bool>visited(v,false);
stack<int>s;
for(int i=0;i<v;i++){
    if(!visited[i]){
        topSort(adj,visited,i,s);
 
}
}
vector<int>ans;
while(!s.empty()){
    ans.push_back(s.top());
    s.pop();
}
return ans;
}
