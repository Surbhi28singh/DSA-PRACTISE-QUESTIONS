class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==nullptr)
        return ans;
       map<int, map<int, multiset<int>>> topnode;
        queue<pair<TreeNode* ,pair<int,int>>>q;
        q.push(make_pair(root,make_pair(0,0)));
        while(!q.empty()){
          auto temp=q.front();
            q.pop();
            TreeNode* frontnode=temp.first;
            int hd=temp.second.first;
            int lvl=temp.second.second;;
            
                topnode[hd][lvl].insert(frontnode->val);
         
            if(frontnode->left)
            q.push(make_pair(frontnode->left,make_pair(hd-1,lvl+1)));
            if(frontnode->right)
            q.push(make_pair(frontnode->right,make_pair(hd+1,lvl+1)));
            
        }
        for(auto & [hd,levelmap]:topnode){
            vector<int>cols;
           for(auto [lvl,values]:levelmap){
            cols.insert(cols.end(),values.begin(),values.end());
           }
           ans.push_back(cols);
        }
        return ans;
    }
};
